<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>net.wasdev.wlp.sample</groupId>
        <artifactId>batch-bonuspayout</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    
    <artifactId>batch-bonuspayout-wlpcfg</artifactId>
    <!-- Use 'jar' to get SQL plugin to run -->
    <packaging>jar</packaging>
    <name>WAS Liberty Sample - Batch BonusPayout Server Configuration and Database Table Creation</name>
    <url>https://wasdev.github.io</url>

    <properties>
        <fs>${file.separator}</fs>
        <shared.resource.directory>${basedir}${fs}shared${fs}resources</shared.resource.directory>
        <ddl.dir>${shared.resource.directory}${fs}ddls</ddl.dir>
        <!-- Though this property can be set across all projects from the invoker (command line),
             it is convenient to define the default separately to avoid Derby path issues esp. on Windows -->
        <db.url>${shared.resource.directory}${fs}BatchDB</db.url>
        <derby.version>10.11.1.1</derby.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.6.1</version>
                <configuration>
                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                    <filesets>
                        <fileset>
                            <directory>target</directory>
                        </fileset>
                        <fileset>
                            <directory>servers</directory>
                            <followSymlinks>false</followSymlinks>
                            <includes>
                                <include>**/logs/**</include>
                                <include>**/apps/**</include>
                                <include>**/dropins/**</include>
                                <include>**/workarea/**</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>********</echo>
                                <echo>******** Database location will be at URL: </echo>
                                <echo>******** ${db.url}</echo>
                                <echo>********</echo>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-process-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.apache.derby</groupId>
                                    <artifactId>derby</artifactId>
                                    <version>${derby.version}</version>
                                    <type>jar</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${shared.resource.directory}/derby</outputDirectory>
                                    <destFileName>derby.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- Used to create and prime the database with the BonusPayout application-level table. 
                By calling it "application-level", we're referring to the fact that this 
                is data written by the application, not by the runtime. Note the runtime 
                tables may be created in the same database, as we do in this sample execution. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.derby</groupId>
                        <artifactId>derby</artifactId>
                        <version>${derby.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>org.apache.derby.jdbc.EmbeddedDriver</driver>
                    <url>jdbc:derby:${db.url};create=true</url>
                </configuration>
                <executions>
                    <execution>
                        <id>drop-db-before-test-if-any</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <sqlCommand>drop table BONUSPAYOUT.ACCOUNT</sqlCommand>
                            <onError>continue</onError>
                            <skip>${reuseDB}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-db</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>${ddl.dir}${fs}BonusPayout.derby.ddl</srcFile>
                            </srcFiles>
                            <skip>${reuseDB}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>shutdown-database-so-that-test-can-run</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <url>jdbc:derby:${db.url};shutdown=true</url>
                            <skipOnConnectionError>true</skipOnConnectionError>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>sql-maven-plugin</artifactId>
                                        <versionRange>[1.5,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
